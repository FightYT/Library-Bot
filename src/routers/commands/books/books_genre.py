from aiogram import Router, html
from aiogram.types import Message
from aiogram.filters import Command, CommandObject

from src.database import Genres, Books
from src.utils.others import get_form

router = Router(name="books_genre")

@router.message(Command("books_genre"))
async def books_genre(message: Message, command: CommandObject):
    if command.args is None:
        return await message.answer(get_form(books_genre.__name__))

    genres = await Genres.filter(genre=command.args).first()
    if not genres:
        return await message.answer("üìö <b> –ù–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Ç–∞–∫–æ–≥–æ –∂–∞–Ω—Ä–∞</b>")

    books = await Books.filter(genre_id=genres.id)
    if not books:
        return await message.answer("üìö <b> –í –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –Ω–µ—Ç –∫–Ω–∏–≥ —Å —Ç–∞–∫–∏–º –∂–∞–Ω—Ä–æ–º</b>")

    list_of_books = "".join("{} - {}\n".format(html.code(book.title), html.code(book.author)) for book in books)

    await message.answer(
        f"üìö <b>–°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ —Å –∂–∞–Ω—Ä–æ–º <code>{genres.genre}</code>:</b>\n"
        f"<b>–§–æ—Ä–º–∞—Ç:</b> <code> –ù–∞–∑–≤–∞–Ω–∏–µ - –ê–≤—Ç–æ—Ä</code>\n{list_of_books}"
        "\n\n<b>–ß—Ç–æ —É–∑–Ω–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ, –Ω–∞–π–¥–∏—Ç–µ –∫–Ω–∏–≥—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã</b> /search")